openapi: 3.0.0
info:
  title: API de gestion des posts et utilisateurs
  description: API pour la gestion des utilisateurs, des posts, et des commentaires
  version: 1.0.0
paths:
  /login:
    post:
      summary: Authentification d'un utilisateur
      description: Authentifie un utilisateur avec ses informations de connexion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Connexion réussie
        '401':
          description: Nom d'utilisateur ou mot de passe incorrect

  /register:
    post:
      summary: Inscription d'un utilisateur
      description: Crée un nouvel utilisateur avec un nom d'utilisateur et un mot de passe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                nickname:
                  type: string
              required:
                - username
                - password
                - nickname
      responses:
        '201':
          description: Utilisateur créé avec succès
        '400':
          description: Données invalides

  /change/password:
    post:
      summary: Changer le mot de passe
      description: Permet à un utilisateur de changer son mot de passe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        '200':
          description: Mot de passe modifié avec succès
        '400':
          description: Mot de passe actuel incorrect
        '401':
          description: Non autorisé

  /change/nickname:
    post:
      summary: Changer le surnom d'un utilisateur
      description: Permet à un utilisateur de changer son surnom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newNickname:
                  type: string
              required:
                - newNickname
      responses:
        '200':
          description: Surnom modifié avec succès
        '400':
          description: Surnom invalide
        '401':
          description: Non autorisé

  /posts:
    get:
      summary: Obtenir tous les posts
      description: Récupère une liste de tous les posts
      responses:
        '200':
          description: Liste des posts récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: integer
                    author:
                      type: string
                    content:
                      type: string
    post:
      summary: Créer un nouveau post
      description: Crée un nouveau post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Post créé avec succès
        '400':
          description: Contenu du post invalide

  /users/{userId}:
    get:
      summary: Obtenir des informations sur un utilisateur
      description: Récupère les informations d'un utilisateur avec son ID
      parameters:
        - name: userId
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: integer
      responses:
        '200':
          description: Informations sur l'utilisateur récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  username:
                    type: string
                  nickname:
                    type: string
        '404':
          description: Utilisateur non trouvé

  /users/{userId}/posts:
    get:
      summary: Obtenir les posts d'un utilisateur
      description: Récupère les posts d'un utilisateur spécifié par son ID
      parameters:
        - name: userId
          in: path
          required: true
          description: ID de l'utilisateur
          schema:
            type: integer
      responses:
        '200':
          description: Liste des posts de l'utilisateur récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: integer
                    content:
                      type: string

  /users/{nickname}:
    get:
      summary: Obtenir des informations sur un utilisateur via son surnom
      description: Récupère les informations d'un utilisateur à partir de son surnom
      parameters:
        - name: nickname
          in: path
          required: true
          description: Surnom de l'utilisateur
          schema:
            type: string
      responses:
        '200':
          description: Informations sur l'utilisateur récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  username:
                    type: string
                  nickname:
                    type: string
        '404':
          description: Utilisateur non trouvé

  /users/{nickname}/posts:
    get:
      summary: Obtenir les posts d'un utilisateur via son surnom
      description: Récupère les posts d'un utilisateur à partir de son surnom
      parameters:
        - name: nickname
          in: path
          required: true
          description: Surnom de l'utilisateur
          schema:
            type: string
      responses:
        '200':
          description: Liste des posts de l'utilisateur récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: integer
                    content:
                      type: string

  /posts/{postId}/comments:
    get:
      summary: Obtenir les commentaires d'un post
      description: Récupère tous les commentaires d'un post spécifié par son ID
      parameters:
        - name: postId
          in: path
          required: true
          description: ID du post
          schema:
            type: integer
      responses:
        '200':
          description: Liste des commentaires récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    commentId:
                      type: integer
                    author:
                      type: string
                    content:
                      type: string

    post:
      summary: Ajouter un commentaire à un post
      description: Permet d'ajouter un commentaire à un post spécifié
      parameters:
        - name: postId
          in: path
          required: true
          description: ID du post
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Commentaire ajouté avec succès
        '400':
          description: Contenu du commentaire invalide
